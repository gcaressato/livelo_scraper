// Configura√ß√£o Firebase din√¢mica - Livelo Analytics Pro
// Placeholders substitu√≠dos automaticamente pelo GitHub Actions

// Configura√ß√£o principal do Firebase
window.firebaseConfig = {
    apiKey: "{{FIREBASE_API_KEY}}",
    authDomain: "{{FIREBASE_AUTH_DOMAIN}}",
    projectId: "{{FIREBASE_PROJECT_ID}}",
    storageBucket: "{{FIREBASE_STORAGE_BUCKET}}",
    messagingSenderId: "{{FIREBASE_MESSAGING_SENDER_ID}}",
    appId: "{{FIREBASE_APP_ID}}"
};

// Chave VAPID para notifica√ß√µes web push
window.firebaseVapidKey = "{{FIREBASE_VAPID_KEY}}";

// Fun√ß√£o para verificar se Firebase foi configurado
window.checkFirebaseConfig = function() {
    const config = window.firebaseConfig;
    const vapidKey = window.firebaseVapidKey;
    
    if (!config.apiKey || config.apiKey.includes('{{')) {
        console.warn('‚ö†Ô∏è Firebase config n√£o foi substitu√≠da corretamente');
        return false;
    }
    
    if (!vapidKey || vapidKey.includes('{{')) {
        console.warn('‚ö†Ô∏è VAPID key n√£o foi substitu√≠da corretamente');
        return false;
    }
    
    console.log('‚úÖ Firebase config carregada:', config.projectId);
    return true;
};

// Verificar automaticamente ao carregar
if (window.checkFirebaseConfig()) {
    console.log('üî• Firebase pronto para uso');
    console.log('üì± Notifica√ß√µes web push dispon√≠veis');
} else {
    console.log('‚ö†Ô∏è Firebase n√£o configurado - modo somente leitura');
}

// Expor globalmente para debug (apenas em desenvolvimento)
if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
    window.debugFirebase = {
        config: window.firebaseConfig,
        vapidKey: window.firebaseVapidKey ? window.firebaseVapidKey.substring(0, 10) + '...' : 'n√£o definida',
        checkConfig: window.checkFirebaseConfig
    };
    console.log('üîç Debug Firebase dispon√≠vel em window.debugFirebase');
}
