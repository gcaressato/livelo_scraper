name: Livelo Partners Scraper
on:
  schedule:
    - cron: '0 12 * * *'  # Executa todos os dias às 12:00 UTC
  workflow_dispatch:  # Permite execução manual

# Permissões mínimas necessárias
permissions:
  contents: write  # Para commit e push
  pages: write    # Para GitHub Pages
  id-token: write # Para deployment

jobs:
  scrape-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4
        
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Configurar Chrome
        uses: browser-actions/setup-chrome@latest
          
      - name: Instalar dependências
        run: |
          pip install selenium webdriver-manager pandas openpyxl selenium-stealth plotly numpy
          
      - name: Criar diretórios para logs e saída
        run: |
          mkdir -p logs
          mkdir -p relatorios
          mkdir -p _site
          
      - name: Executar script principal
        run: |
          python main.py 2>&1 | tee output.log
        continue-on-error: true
        
      - name: Verificar falhas na execução
        run: |
          if cat output.log | grep -q "Falha no scraper\|Falha no reporter\|ERRO FATAL"; then
            echo "::warning::Falhas detectadas na execução!"
            grep -A 10 "Falha\|ERRO" output.log || true
          else
            echo "Nenhuma falha detectada na execução."
          fi
      
      - name: Configurar Git para commit
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          
      - name: Commit e push dos novos dados
        run: |
          # Copiar logs
          if [ -f "output.log" ]; then
            cp output.log logs/scraper_$(date +%Y%m%d_%H%M%S).log
          fi
          
          # Adicionar arquivos ao git
          git add logs/ relatorios/ livelo_parceiros.xlsx || echo "Falha ao adicionar arquivos"
          
          # Tentar commit com verificação se há algo para comitar
          git diff --staged --quiet || git commit -m "Atualização automática [$(date)]"
          
          # Push com tratamento de erro
          git push || echo "Falha ao fazer push, verifique os logs para mais detalhes"
      
      # Parte de GitHub Pages
      - name: Configurar Pages
        uses: actions/configure-pages@v3
        
      - name: Preparar relatório para GitHub Pages
        run: |
          # Encontrar o relatório mais recente
          if [ -d "relatorios" ]; then
            LATEST_REPORT=$(ls -t relatorios/*.html 2>/dev/null | head -1)
            if [ -n "$LATEST_REPORT" ]; then
              echo "Relatório mais recente encontrado: $LATEST_REPORT"
              # Copiar para a pasta _site como index.html
              cp "$LATEST_REPORT" _site/index.html
              echo "Relatório copiado para _site/index.html"
            else
              # Criar página de erro se não encontrar relatório
              echo "<html><head><title>Relatório Livelo</title></head><body><h1>Relatório não encontrado</h1><p>Nenhum relatório disponível.</p></body></html>" > _site/index.html
              echo "Página de erro criada"
            fi
          else
            # Criar página de erro se pasta não existir
            echo "<html><head><title>Relatório Livelo</title></head><body><h1>Relatório não encontrado</h1><p>Pasta de relatórios não existe.</p></body></html>" > _site/index.html
            echo "Página de erro criada"
          fi
      
      - name: Upload páginas
        uses: actions/upload-pages-artifact@v2
        with:
          path: '_site'
      
      - name: Deploy para GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
